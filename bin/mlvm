#!/usr/bin/env python
# coding=utf-8

# Copyright 2016 MarkLogic Corporation
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#    http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""MarkLogic Version Manager

Usage:
  mlvm list [--remote] [--verbose | --debug]
  mlvm use <version> [--verbose | --debug]
  mlvm prepare [--verbose | --debug]
  mlvm install <version> [--alias=<name>] [--today | --yesterday] [--upgrade] [--verbose | --debug]
  mlvm install --local <package> [--alias <name>] [--upgrade] [--verbose | --debug]
  mlvm remove [<version> | --all] [--verbose | --debug]
  mlvm rename <version> <name> [--alias=<name>] [--verbose | --debug]
  mlvm init [--host=<name>] [--rename=<name>] [--verbose | --debug]
  mlvm start [--verbose | --debug]
  mlvm stop [--verbose | --debug]
  mlvm eval <input> [--sjs | --xqy] [--database=<database>]
  mlvm ps
  
Options:
  -h --help               This screen
  --remote                Include remote versions as well
  --version               The version
  -a --alias=<name>       A preferred name for the version
  --today                 Today’s nightly (requires credentials)
  --yesterday             Yesterday’s nightly (requires credentials)
  -l --local              Install a package from a local file
  -u --upgrade            Upgrade an existing installation
  -a --all                Remove all versions
  --host=<name>           The hostname of the bootstrap server to init [default: 127.0.0.1]
  --rename=<name>         Sets the hostname of the default/bootstrap host
  --sjs                   Evaluate Server-Side JavaScript
  --xqy                   Evaluate XQuery
  -d --database=<name>    The database to evaluate against [default: Documents]
  -v --verbose            More detailed information
  --debug                 Developer debugging information

You must use run prepare as root, for example using sudo

"""

# TODO: Parse arguments into command-specific data structures, decoupled from actual command-line interface
# install (remote): { 'version': None, 'alias': None, 'nightly': None, 'upgrade': False }
# install (local) : { 'local': None, 'alias': None, 'upgrade': false }

import sys
import traceback
from docopt import docopt
from mlvm.main import route_command

DEBUG = True # TODO: Link this to `--debug` option

if __name__ == '__main__':
    try:
        arguments = docopt(__doc__, version='2.0.0')
        print(arguments)
        route_command(arguments)
    except Exception, err:
        exc_info = sys.exc_info()
        if DEBUG: 
            traceback.print_exception(*exc_info, limit = None, file = sys.stderr)
            del exc_info
        if not DEBUG:
            sys.exit(1) # TODO: Better Exceptions and return code